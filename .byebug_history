continue
value
continue
Article.where('id != ? and featured', self.id).update_all(featured:false)
next
Article.where('id != ? and featured', self.id)
value
continue
bindings[:controller].controller_name
bindings[:controller].action_name
continue
value
continue
bindings[:object]
bindings[:object].featured
bindings[:object]
continue
Article.where(featured:true).update_all(featured: false)
Article.find_by_featured(true).update_all(featured: false)
Article.find_by_featured(true)
Article.find(featured: true)
next
continue
continiue
video_info.data['pictures']['sizes'].last['link']
video_info.data['pictures']['sizes'].last
video_info.data['pictures']['sizes'].sort_by{|a| a['width']}
video_info.data['pictures']['sizes'].map{|a| a['width']}
video_info.data['pictures']['sizes'].each{|a| a['width']}
video_info.data['pictures']['sizes']
video_info.data['pictures'].to_a
video_info.data['pictures']
video_info.data['pictures'].first
video_info.data['pictures']
video_info.data['pictures'].sort_by {|a| a['width'].to_i}
video_info.data['pictures'].sort_by {|a| a['width']}
video_info.data['pictures'].sort(width)
video_info.data['pictures'].first
video_info.data['pictures'].length
video_info.data['pictures']
video_info.data['pictures'].to_a
video_info.data['pictures'].map{|a|a['uri']}
video_info.data['pictures']
video_info.provider
video_info.data['pictures']
video_info.data.pictures
video_info.data
video_info
continue
VideoInfo.new(video_url)
 video_info
video_info.data
video_info.data['user']
video_info.data
video_info.view_count
 video_info
pp video_info
pp video_info.data
pp video_info._api_base
pp video_info.data
pp video_info.data.pictures
pp video_info.data
pp video_info.author
pp video_info.title
pp video_info._video
pp video_info.provider
pp video_info.embed_url
pp video_info
video_info.generate_thumbnail
video_info
info
generate_thumbnail
video_info.thumbnail_large
video_info.methods
video_info.info
video_info
continue
info
continue
@info
 @info ||= VideoInfo.new(video_url)
@info
 VideoInfo.new(video_url)
@info
continue
@video_url
video_url
VideoInfo.new(@video_url)
@info
continue
Article.images.first.article_images.first.image?
Article.images.first.article_images.first
Article.images.first
Article.images
Article.images.article_images.first
Article.first.article_images.first
pp article_video.image
article_video.image
article_video.image?
article_video.image.url
article_video.image.url(:large)
article_video.image
article_video
article_video.cover_image
video.cover_image
video?
continue
article_images.first.image.url(:large)
video?
article.video
article.video?
continue
article_images.first.image.url(:large)
article_images.first.image.url
article_images.first.image
article_images.first
article_images
next
video?
continue
@featured
@articles
continue
@articles
continue
@featured
@articles
@articles.first
next
continue
next
pp @articles
@articles
@featured
next
@articles.length
next
continue
@articles.to_a
@articles.featured
@articles.to_a.featured
@articles.featured
@articles
continue
@articles = @articles.to_a
@articles.to_a
@articles.members
@articles.models
@articles
continue
Article.last.publish!
Article.count
@articles.first.featured
@articles.length
@articles
continue
a.published
a.publish!
a.published_at
a.published
a = Article.first
a = Article.fist
continue
Article.first.publish!
Article.first.published!
Article.first.publish
Article.first.published
Article.first
continue
a.update_attributes(published_at: Time.now)
a
a= Article.first
a= Article.fist
Article.first.published_at = Time.now
Article.first.publish!
Article.first.published
Article.first.publish!
Article.first.published
Article.first.published?
@articles.all
@articles
continue
Article.first.publish!
Article.first.publish
Article.all
Article
Article.published
 @articles = Article.published.order('published_at DESC').all
 @articles = Article.published.order('published_at DESC')
Article.all.each{|a| a.publish}
@articles
continue
Article.all.each{|a| a.publish}
Article.each{|a| a.publish}
@articles
Article.published
Article.all.length
Article.all
@articles
Article.last
if (@featured)
if (@featured) { true }
@featured?
@featured == true
@featured
@featured.nil?
@featured?
@featured
Article.last
@featured
continue
self
continue
article.featured_image == self
article.featured_image
continue
article.featured_image
continue
self.id
article.featured_image_id
article.featured_image
continue
ArticleImage.featured.first.id
self.id
self.featured
self.changed
continue
self.id
self.ie
self.changed
self.featured_changed?
self.featured_changed
self.featured
self
continue
ArticleImage.featured.length
self.featured_changed?
self.featured_changed
self.featured
self
self.
continue
next
continue
next
self.featured
self.changed
self
ArticleImage.featured
ArticleImage.featured.length
continue
self
next
ArticleImage.featured.length
ArticleImage.featured
self.featured
